---
name: Update images

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 0 * * *" # Every day

jobs:
  update_package:
    name: Update package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: telegraf
            repo: influxdata/telegraf
            suffix: "alpine"


    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Get lates release for ${{ matrix.image.telegraf }}
        id: last_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ matrix.image.repo }}

      - name: Calculate latest version
        run: echo ${{ steps.last_release.outputs.release }} | sed 's/^v\(.*\)/\1/'

      - name: Save latest version
        id: last_version
        run: |
          echo "Latest release: ${{ steps.last_release.outputs.release }}"
          version=$(echo ${{ steps.last_release.outputs.release }} | sed 's/^v\(.*\)/\1/') # Remove v from vX.Y.Z
          echo "Version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if image is already built
        id: exists
        continue-on-error: true # We need to handle exit status
        env:
          TAG: "${{ steps.last_version.outputs.version }}-${{ matrix.image.suffix }}"
        run: |
          docker manifest inspect ghcr.io/${{ github.repository_owner }}/${{ matrix.image.name }}:${{ env.TAG }}x
          echo "code=$?" >> $GITHUB_OUTPUT

      - name: Build and publish to ghcr.io
        if: ${{ steps.exists.outputs.code != 0 }}
        uses: macbre/push-to-ghcr@master
        env:
          TAG: "${{ steps.last_version.outputs.version }}-${{ matrix.image.suffix }}"
        with:
          image_name: ${{ github.repository_owner }}/${{ matrix.image.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "${{ matrix.image.name }}/Dockerfile"
          image_tag: "${{ env.TAG }}"
          context: "--build-arg VERSION=${{ env.TAG }} ${{ matrix.image.name }}/Dockerfile"
