---
name: Update images

on:
  workflow_dispatch:
  push:

jobs:
  update_package:
    name: Update package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: telegraf
            repo: influxdata/telegraf
            suffix: "alpine"

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Authenticate at ghcr.io
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin

      - name: Get lates release for ${{ matrix.image.telegraf }}
        id: last_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ matrix.image.repo }}

      - name: Print latest release
        run: echo ${{ steps.last_release.outputs.release }} | sed 's/^v\(.*\)/\1/'

      - name: Save latest version
        id: last_version
        run: echo "version=$(echo ${{ steps.last_release.outputs.release }} | sed 's/^v\(.*\)/\1/')" >> $GITHUB_OUTPUT

      - name: Print latest version
        run: echo ${{ steps.last_version.outputs.version }} | sed 's/^v\(.*\)/\1/'

      # TODO: check if tag already exists

      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        env:
          TAG: "${{ steps.last_version.outputs.version }}-${{ matrix.image.suffix }}"
        with:
          image_name: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "${{ matrix.image.name }}/Dockerfile"
          image_tag: "${{ env.TAG }}"
          context: "--build-arg VERSION=${{ env.TAG }} ${{ matrix.image.name }}/Dockerfile"
